// Autogenerated AST node
package org.kamalyes.jython3.antlr.base;

import org.antlr.runtime.Token;
import org.kamalyes.jython3.antlr.AST;
import org.kamalyes.jython3.antlr.PythonTree;
import org.kamalyes.jython3.core.PyUnicode;
import org.kamalyes.jython3.core.PyType;
import org.kamalyes.jython3.expose.ExposedGet;
import org.kamalyes.jython3.expose.ExposedType;

@ExposedType(name = "_ast.mod", base = AST.class)
public abstract class mod extends PythonTree {

  public static final PyType TYPE = PyType.fromClass(mod.class);
  private final static PyUnicode[] fields = new PyUnicode[0];

  @ExposedGet(name = "_fields")
  public PyUnicode[] get_fields() {
    return fields;
  }

  private final static PyUnicode[] attributes = new PyUnicode[0];

  @ExposedGet(name = "_attributes")
  public PyUnicode[] get_attributes() {
    return attributes;
  }

  public mod() {
  }

  public mod(PyType subType) {
  }

  public mod(int ttype, Token token) {
    super(ttype, token);
  }

  public mod(Token token) {
    super(token);
  }

  public mod(PythonTree node) {
    super(node);
  }

}
